name: SonarQube

on: [push]

jobs:
  analysis:
    runs-on: ubuntu-latest
    services:
      db:
        image: postgres:13
        env:
          POSTGRES_USER: sonar
          POSTGRES_PASSWORD: sonar
          POSTGRES_DB: sonar
        ports:
          - 5432:5432

      sonarqube:
        image: sonarqube:9.9-community
        ports:
          - 9000:9000
        env:
          SONAR_JDBC_URL: jdbc:postgresql://db:5432/sonar
          SONAR_JDBC_USERNAME: sonar
          SONAR_JDBC_PASSWORD: sonar
        options: >-
          --health-cmd="curl -f http://localhost:9000/api/system/status || exit 1"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=30
          --shm-size=2g

    steps:
      - uses: actions/checkout@v3

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Wait for SonarQube
        run: |
          for i in {1..60}; do
            STATUS=$(curl -s http://localhost:9000/api/system/status | jq -r '.status' || echo "")
            if [ "$STATUS" = "UP" ]; then
              echo "SonarQube is ready"
              break
            fi
            echo "Waiting ($i)..."
            sleep 5
          done

      - name: Run SonarQube analysis
        env:
          SONAR_TOKEN: admin
        run: |
          mvn verify sonar:sonar \
            -Dsonar.projectKey=myproject \
            -Dsonar.host.url=http://localhost:9000 \
            -Dsonar.login=$SONAR_TOKEN
