name: Diff Coverage on PR

on:
  pull_request:

jobs:
  diff-coverage:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      pull-requests: write  # Needed to comment on PR

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0       # Fetch full history
          ref: ${{ github.head_ref }}  # Checkout the PR branch

      - name: Fetch base branch
        run: git fetch origin ${{ github.base_ref }}
           
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install diff-cover
        run: pip install diff-cover

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build and generate coverage
        run: ./gradlew test jacocoTestReport

      - name: Generate diff coverage report
        run: |
          diff-cover build/reports/jacoco/test/jacocoTestReport.xml \
            --compare-branch=origin/${{ github.base_ref }} \
            --markdown-report=diff-cover-report.md --verbose

      - name: Fetch Quality Gate Status
        run: |
          echo "Waiting briefly to allow SonarQube to process analysis..."
          sleep 10
          STATUS=$(curl -s -u admin:admin "http://localhost:9000/api/qualitygates/project_status?projectKey=myproject" | jq -r .projectStatus.status)
          echo "SonarQube Quality Gate: $STATUS"
          echo "## 🔍 SonarQube Quality Gate Result" > sonar-report.md
          echo "**Status:** \`$STATUS\`" >> sonar-report.md
          echo "" >> sonar-report.md

      - name: Fetch Coverage Data
        run: |
          # Fetching coverage & issue metrics
          SONAR_AUTH="admin:admin"
          SONAR_URL="http://localhost:9000"

          PROJECT_KEY="myproject"
          RESPONSE=$(curl -s -u "$SONAR_AUTH" "$SONAR_URL/api/measures/component?component=myproject&metricKeys=bugs,vulnerabilities,code_smells,coverage,line_coverage,branch_coverage,uncovered_lines")

          # Extract each metric
          BUGS=$(echo "$RESPONSE" | jq -r '.component.measures[] | select(.metric=="bugs") | .value')
          VULNERABILITIES=$(echo "$RESPONSE" | jq -r '.component.measures[] | select(.metric=="vulnerabilities") | .value')
          CODE_SMELLS=$(echo "$RESPONSE" | jq -r '.component.measures[] | select(.metric=="code_smells") | .value')
          COVERAGE=$(echo "$RESPONSE" | jq -r '.component.measures[] | select(.metric=="coverage") | .value')
          LINE_COVERAGE=$(echo "$RESPONSE" | jq -r '.component.measures[] | select(.metric=="line_coverage") | .value')
          BRANCH_COVERAGE=$(echo "$RESPONSE" | jq -r '.component.measures[] | select(.metric=="branch_coverage") | .value')
          UNCOVERED_LINES=$(echo "$RESPONSE" | jq -r '.component.measures[] | select(.metric=="uncovered_lines") | .value')

          # Output or use in PR comment
          echo "🔐 Vulnerabilities: $VULNERABILITIES" >> sonar-report.md
          echo "🐞 Bugs: $BUGS" >> sonar-report.md
          echo "🧹 Code Smells: $CODE_SMELLS" >> sonar-report.md
          echo "📈 Coverage: $COVERAGE%" >> sonar-report.md
          echo "📏 Line Coverage: $LINE_COVERAGE%" >> sonar-report.md
          echo "🌿 Branch Coverage: $BRANCH_COVERAGE%" >> sonar-report.md
          echo "🚫 Uncovered Lines: $UNCOVERED_LINES" >> sonar-report.md

      - name: Post diff coverage comment
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          path: diff-cover-report.md
