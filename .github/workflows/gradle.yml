name: SonarQube with Coverage Report

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  analysis:
    runs-on: ubuntu-latest
    services:
      sonarqube:
        image: sonarqube:community
        ports:
          - 9000:9000
        options: >-
          --health-cmd="curl -f http://localhost:9000/api/system/health || exit 1"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=10

    steps:
      - uses: actions/checkout@v3

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Wait for SonarQube
        run: |
          echo "Waiting for SonarQube..."
          for i in {1..30}; do
            STATUS=$(curl -s http://localhost:9000/api/system/status | jq -r '.status')
            if [ "$STATUS" == "UP" ]; then
              echo "SonarQube is up!"
              break
            fi
            sleep 5
          done

      - name: Run Tests + Coverage + SonarQube
        env:
          SONAR_TOKEN: admin
        run: |
          mvn clean verify sonar:sonar \
            -Dsonar.projectKey=myproject \
            -Dsonar.host.url=http://localhost:9000 \
            -Dsonar.login=$SONAR_TOKEN \
            -Dsonar.coverage.jacoco.xmlReportPaths=target/site/jacoco/jacoco.xml

      - name: Extract coverage from JaCoCo XML
        id: jacoco
        run: |
          LINE_COVERAGE=$(xmllint --xpath "string(//report/counter[@type='LINE']/@covered)" target/site/jacoco/jacoco.xml)
          LINE_TOTAL=$(xmllint --xpath "string(//report/counter[@type='LINE']/@missed)" target/site/jacoco/jacoco.xml)
          LINE_TOTAL=$((LINE_COVERAGE + LINE_TOTAL))
          PERCENT=$(awk "BEGIN {printf \"%.2f\", ($LINE_COVERAGE / $LINE_TOTAL) * 100}")
          echo "coverage=$PERCENT" >> $GITHUB_OUTPUT

      - name: Get Quality Gate status
        id: quality_gate
        run: |
          sleep 5
          STATUS=$(curl -s -u admin:admin \
            "http://localhost:9000/api/qualitygates/project_status?projectKey=myproject" | jq -r '.projectStatus.status')
          echo "status=$STATUS" >> $GITHUB_OUTPUT

      - name: Post PR Comment
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          message: |
            **SonarQube Analysis**
            - Project: `myproject`
            - Quality Gate: **${{ steps.quality_gate.outputs.status }}**
            - Code Coverage: **${{ steps.jacoco.outputs.coverage }}%**
            - [View Sonar Dashboard](http://localhost:9000/dashboard?id=myproject)
